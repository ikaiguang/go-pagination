syntax = "proto3";

option go_package = "github.com/ikaiguang/go-pagination;pagination";

package pagination;

/**
 * @apiDefine paging_option paging_option
 *
 * @apiParam (paging_option) {bool} [paging_mode] page number mode and cursor mode (default : page number mode)
 * @apiParam (paging_option) {int64} [current_page_number] current page number (default : 0)
 *
 * @apiParam (paging_option) {int64} [goto_page_number] goto page number : which page (default : 1)
 * @apiParam (paging_option) {int64} [page_size] the number of items to be shown per page (default : 15)
 *
 * @apiParam (paging_option) {paging_order-array} order_by order by (default : {column:id, direction:desc})
 *
 * @apiParam (paging_option) {string} [cursor_column] cursor column (default : id)
 * @apiParam (paging_option) {string} [cursor_direction] cursor direction : asc or desc (default : desc)
 * @apiParam (paging_option) {double} [cursor_value] cursor value (default : 0)
 */

// paging_option : paging option
message paging_option {
    // paging mode : page number mode andcursor mode
    int64 paging_mode = 1; // page number mode and cursor mode (default : page number)
    int64 current_page_number = 2; // current page number (default : 0)
    // page info
    int64 goto_page_number = 100; // goto page number : which page (default : 1)
    int64 page_size = 101; // the number of items to be shown per page (default : 15)
    // order by
    repeated paging_order order_by = 200; // order by (default : id desc)
    // cursor mode
    string cursor_column = 300; // cursor column (default : id)
    string cursor_direction = 301; // cursor direction : asc or desc (default : desc)
    double cursor_value = 302; // cursor value (default : 0)
}

/**
 * @apiDefine paging_order paging_order
 *
 * @apiDescription example : paging_order = [{column:id, direction:desc}, {column:id, direction:desc}]
 *
 * @apiParam (paging_order) {string} column order column (default : id)
 * @apiParam (paging_order) {string} direction order direction (default : desc)
 */

// paging_order : paging order (example : order by id desc)
message paging_order {
    string column = 1; // order column (default : id)
    string direction = 2; // order direction (default : desc)
}

/**
 * @apiDefine paging_result paging_result
 *
 * @apiSuccess (paging_result) {int64} paging_mode paging mode
 *
 * @apiSuccess (paging_result) {int64} total_size total records number
 * @apiSuccess (paging_result) {int64} page_size show records number
 * @apiSuccess (paging_result) {int64} current_page current page number
 * @apiSuccess (paging_result) {int64} show_from current page show from - to records
 * @apiSuccess (paging_result) {int64} show_to current page show from - to records
 * @apiSuccess (paging_result) {int64} last_page last page
 *
 * @apiSuccess (paging_result) {paging_order-array} order_by order by
 *
 * @apiSuccess (paging_result) {string} cursor_column cursor column
 * @apiSuccess (paging_result) {string} cursor_direction cursor direction
 * @apiSuccess (paging_result) {double} cursor_value cursor value
 */

// paging_result : paging result
message paging_result {
    // paging mode : page number mode and cursor mode
    int64 paging_mode = 1; // paging mode
    // page info
    int64 total_size = 100; // total records number
    int64 page_size = 101; // the number of items to be shown per page
    int64 current_page = 102; // current page number
    int64 show_from = 103; // current page show from - to records
    int64 show_to = 104; // current page show from - to records
    int64 last_page = 105; // last page
    // order by
    repeated paging_order order_by = 200; // order by
    // cursor mode
    string cursor_column = 300; // cursor column
    string cursor_direction = 301; // cursor direction
    double cursor_value = 302; // cursor value
    // paging option
    paging_option option = 400; // option
}
