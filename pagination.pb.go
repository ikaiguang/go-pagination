// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pagination.proto

/*
Package pagination is a generated protocol buffer package.

It is generated from these files:
	pagination.proto

It has these top-level messages:
	PagingOption
	PagingOrder
	PagingResult
*/
package pagination

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// paging_option : paging option
type PagingOption struct {
	// paging mode : page number mode andcursor mode
	PagingMode        int64 `protobuf:"varint,1,opt,name=paging_mode,json=pagingMode" json:"paging_mode,omitempty"`
	CurrentPageNumber int64 `protobuf:"varint,2,opt,name=current_page_number,json=currentPageNumber" json:"current_page_number,omitempty"`
	// page info
	GotoPageNumber int64 `protobuf:"varint,100,opt,name=goto_page_number,json=gotoPageNumber" json:"goto_page_number,omitempty"`
	PageSize       int64 `protobuf:"varint,101,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	// order by
	OrderBy []*PagingOrder `protobuf:"bytes,200,rep,name=order_by,json=orderBy" json:"order_by,omitempty"`
	// cursor mode
	CursorColumn    string  `protobuf:"bytes,300,opt,name=cursor_column,json=cursorColumn" json:"cursor_column,omitempty"`
	CursorDirection string  `protobuf:"bytes,301,opt,name=cursor_direction,json=cursorDirection" json:"cursor_direction,omitempty"`
	CursorValue     float64 `protobuf:"fixed64,302,opt,name=cursor_value,json=cursorValue" json:"cursor_value,omitempty"`
}

func (m *PagingOption) Reset()                    { *m = PagingOption{} }
func (m *PagingOption) String() string            { return proto.CompactTextString(m) }
func (*PagingOption) ProtoMessage()               {}
func (*PagingOption) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PagingOption) GetPagingMode() int64 {
	if m != nil {
		return m.PagingMode
	}
	return 0
}

func (m *PagingOption) GetCurrentPageNumber() int64 {
	if m != nil {
		return m.CurrentPageNumber
	}
	return 0
}

func (m *PagingOption) GetGotoPageNumber() int64 {
	if m != nil {
		return m.GotoPageNumber
	}
	return 0
}

func (m *PagingOption) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PagingOption) GetOrderBy() []*PagingOrder {
	if m != nil {
		return m.OrderBy
	}
	return nil
}

func (m *PagingOption) GetCursorColumn() string {
	if m != nil {
		return m.CursorColumn
	}
	return ""
}

func (m *PagingOption) GetCursorDirection() string {
	if m != nil {
		return m.CursorDirection
	}
	return ""
}

func (m *PagingOption) GetCursorValue() float64 {
	if m != nil {
		return m.CursorValue
	}
	return 0
}

// paging_order : paging order (example : order by id desc)
type PagingOrder struct {
	Column    string `protobuf:"bytes,1,opt,name=column" json:"column,omitempty"`
	Direction string `protobuf:"bytes,2,opt,name=direction" json:"direction,omitempty"`
}

func (m *PagingOrder) Reset()                    { *m = PagingOrder{} }
func (m *PagingOrder) String() string            { return proto.CompactTextString(m) }
func (*PagingOrder) ProtoMessage()               {}
func (*PagingOrder) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PagingOrder) GetColumn() string {
	if m != nil {
		return m.Column
	}
	return ""
}

func (m *PagingOrder) GetDirection() string {
	if m != nil {
		return m.Direction
	}
	return ""
}

// paging_result : paging result
type PagingResult struct {
	// paging mode : page number mode and cursor mode
	PagingMode int64 `protobuf:"varint,1,opt,name=paging_mode,json=pagingMode" json:"paging_mode,omitempty"`
	// page info
	TotalSize   int64 `protobuf:"varint,100,opt,name=total_size,json=totalSize" json:"total_size,omitempty"`
	PageSize    int64 `protobuf:"varint,101,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	CurrentPage int64 `protobuf:"varint,102,opt,name=current_page,json=currentPage" json:"current_page,omitempty"`
	ShowFrom    int64 `protobuf:"varint,103,opt,name=show_from,json=showFrom" json:"show_from,omitempty"`
	ShowTo      int64 `protobuf:"varint,104,opt,name=show_to,json=showTo" json:"show_to,omitempty"`
	LastPage    int64 `protobuf:"varint,105,opt,name=last_page,json=lastPage" json:"last_page,omitempty"`
	// order by
	OrderBy []*PagingOrder `protobuf:"bytes,200,rep,name=order_by,json=orderBy" json:"order_by,omitempty"`
	// cursor mode
	CursorColumn    string  `protobuf:"bytes,300,opt,name=cursor_column,json=cursorColumn" json:"cursor_column,omitempty"`
	CursorDirection string  `protobuf:"bytes,301,opt,name=cursor_direction,json=cursorDirection" json:"cursor_direction,omitempty"`
	CursorValue     float64 `protobuf:"fixed64,302,opt,name=cursor_value,json=cursorValue" json:"cursor_value,omitempty"`
	// paging option
	Option *PagingOption `protobuf:"bytes,400,opt,name=option" json:"option,omitempty"`
}

func (m *PagingResult) Reset()                    { *m = PagingResult{} }
func (m *PagingResult) String() string            { return proto.CompactTextString(m) }
func (*PagingResult) ProtoMessage()               {}
func (*PagingResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PagingResult) GetPagingMode() int64 {
	if m != nil {
		return m.PagingMode
	}
	return 0
}

func (m *PagingResult) GetTotalSize() int64 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func (m *PagingResult) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PagingResult) GetCurrentPage() int64 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *PagingResult) GetShowFrom() int64 {
	if m != nil {
		return m.ShowFrom
	}
	return 0
}

func (m *PagingResult) GetShowTo() int64 {
	if m != nil {
		return m.ShowTo
	}
	return 0
}

func (m *PagingResult) GetLastPage() int64 {
	if m != nil {
		return m.LastPage
	}
	return 0
}

func (m *PagingResult) GetOrderBy() []*PagingOrder {
	if m != nil {
		return m.OrderBy
	}
	return nil
}

func (m *PagingResult) GetCursorColumn() string {
	if m != nil {
		return m.CursorColumn
	}
	return ""
}

func (m *PagingResult) GetCursorDirection() string {
	if m != nil {
		return m.CursorDirection
	}
	return ""
}

func (m *PagingResult) GetCursorValue() float64 {
	if m != nil {
		return m.CursorValue
	}
	return 0
}

func (m *PagingResult) GetOption() *PagingOption {
	if m != nil {
		return m.Option
	}
	return nil
}

func init() {
	proto.RegisterType((*PagingOption)(nil), "pagination.paging_option")
	proto.RegisterType((*PagingOrder)(nil), "pagination.paging_order")
	proto.RegisterType((*PagingResult)(nil), "pagination.paging_result")
}

func init() { proto.RegisterFile("pagination.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 407 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x93, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x40, 0x95, 0x46, 0x4a, 0x9b, 0x49, 0x0b, 0xc5, 0x48, 0x60, 0x04, 0x88, 0x12, 0x71, 0x88,
	0x38, 0xf4, 0x50, 0xf8, 0x82, 0x52, 0x71, 0x03, 0xa1, 0x80, 0x38, 0x70, 0x89, 0xd2, 0xc4, 0x4d,
	0x23, 0x25, 0x99, 0xc8, 0x71, 0x40, 0xed, 0x57, 0xf0, 0x21, 0xc0, 0x47, 0x70, 0xe2, 0xce, 0x0f,
	0xad, 0x3c, 0xf6, 0xb6, 0x59, 0x69, 0xb5, 0x7b, 0xde, 0x93, 0xe5, 0x37, 0x6f, 0xc6, 0xf6, 0x8c,
	0x0c, 0xf3, 0x36, 0x2d, 0xca, 0x26, 0x55, 0x25, 0x36, 0xcb, 0x56, 0xa2, 0x42, 0x06, 0x67, 0x12,
	0xfe, 0x1f, 0xc1, 0x8c, 0xb6, 0x45, 0x82, 0xad, 0x26, 0xec, 0x05, 0x04, 0x16, 0xd4, 0x98, 0x0b,
	0xee, 0x2c, 0x9c, 0xc8, 0x8d, 0x4d, 0x4a, 0xf1, 0x01, 0x73, 0xc1, 0x96, 0xf0, 0x30, 0xeb, 0xa5,
	0x14, 0x8d, 0x4a, 0xda, 0xb4, 0x10, 0x49, 0xd3, 0xd7, 0x5b, 0x21, 0xf9, 0x88, 0xc4, 0x07, 0x36,
	0xf4, 0x29, 0x2d, 0xc4, 0x47, 0x0a, 0xb0, 0x08, 0xe6, 0x05, 0x2a, 0xbc, 0x22, 0xe7, 0x24, 0xdf,
	0xd3, 0x7c, 0x60, 0x3e, 0x05, 0x9f, 0xa4, 0xae, 0x3c, 0x0a, 0x2e, 0x48, 0x99, 0x68, 0xf0, 0xb9,
	0x3c, 0x0a, 0xf6, 0x16, 0x26, 0x28, 0x73, 0x21, 0x93, 0xed, 0x81, 0xff, 0x73, 0x16, 0x6e, 0x14,
	0xac, 0xf8, 0x72, 0xf8, 0x36, 0xfb, 0x0a, 0xed, 0xc4, 0x63, 0x5a, 0xd6, 0x07, 0xf6, 0x0a, 0x66,
	0x59, 0x2f, 0x3b, 0x94, 0x49, 0x86, 0x55, 0x5f, 0x37, 0xfc, 0x97, 0xbe, 0xa7, 0x1f, 0x4f, 0x0d,
	0x7d, 0x47, 0x90, 0xbd, 0x86, 0xb9, 0xb5, 0xf2, 0x52, 0x8a, 0x4c, 0xd7, 0xe3, 0xbf, 0x8d, 0x78,
	0xdf, 0x04, 0x36, 0x97, 0x9c, 0x85, 0x60, 0x73, 0x93, 0xef, 0x69, 0xd5, 0x0b, 0xfe, 0x47, 0x7b,
	0x4e, 0x1c, 0x18, 0xf8, 0x55, 0xb3, 0x70, 0x03, 0xd3, 0xe1, 0x75, 0xd8, 0x23, 0xf0, 0xec, 0xf1,
	0x0e, 0x15, 0xb5, 0x3b, 0xf6, 0x0c, 0xfc, 0xf3, 0x81, 0xe6, 0xbc, 0x33, 0x08, 0xff, 0xba, 0xa7,
	0xd9, 0x48, 0xd1, 0xf5, 0x95, 0xba, 0x7d, 0x36, 0xcf, 0x01, 0x14, 0xaa, 0xb4, 0x32, 0x2d, 0x34,
	0x5d, 0xf6, 0x89, 0x50, 0x0f, 0x6f, 0x6c, 0xf0, 0x4b, 0x7a, 0xd8, 0x69, 0xae, 0x7c, 0x47, 0xf1,
	0x60, 0x30, 0x50, 0x9d, 0xdf, 0xed, 0xf1, 0x47, 0xb2, 0x93, 0x58, 0xf3, 0xc2, 0xe4, 0x6b, 0xf0,
	0x5e, 0x62, 0xcd, 0x1e, 0xc3, 0x98, 0x82, 0x0a, 0xf9, 0x9e, 0x42, 0x9e, 0xde, 0x7e, 0x41, 0x9d,
	0x55, 0xa5, 0x9d, 0xad, 0x5a, 0x9a, 0x2c, 0x0d, 0xa8, 0xe4, 0x1d, 0x1a, 0x2b, 0x5b, 0x81, 0x67,
	0x3e, 0x09, 0xff, 0xe9, 0x2e, 0x9c, 0x28, 0x58, 0x3d, 0xb9, 0xee, 0xa6, 0x64, 0xc4, 0xd6, 0x5c,
	0x4f, 0xbf, 0x0d, 0xbe, 0xdb, 0xd6, 0xa3, 0x1f, 0xf8, 0xe6, 0x22, 0x00, 0x00, 0xff, 0xff, 0xf5,
	0x84, 0x6e, 0x2d, 0x95, 0x03, 0x00, 0x00,
}
