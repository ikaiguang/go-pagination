// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.4
// source: pagination.proto

package pagination

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// paging_option : paging option
type PagingOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// paging mode : page number mode andcursor mode
	PagingMode        int64 `protobuf:"varint,1,opt,name=paging_mode,json=pagingMode,proto3" json:"paging_mode,omitempty"`                        // page number mode and cursor mode (default : page number)
	CurrentPageNumber int64 `protobuf:"varint,2,opt,name=current_page_number,json=currentPageNumber,proto3" json:"current_page_number,omitempty"` // current page number (default : 0)
	// page info
	GotoPageNumber int64 `protobuf:"varint,100,opt,name=goto_page_number,json=gotoPageNumber,proto3" json:"goto_page_number,omitempty"` // goto page number : which page (default : 1)
	PageSize       int64 `protobuf:"varint,101,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                     // the number of items to be shown per page (default : 15)
	// order by
	OrderBy []*PagingOrder `protobuf:"bytes,200,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"` // order by (default : id desc)
	// cursor mode
	CursorColumn    string  `protobuf:"bytes,300,opt,name=cursor_column,json=cursorColumn,proto3" json:"cursor_column,omitempty"`          // cursor column (default : id)
	CursorDirection string  `protobuf:"bytes,301,opt,name=cursor_direction,json=cursorDirection,proto3" json:"cursor_direction,omitempty"` // cursor direction : asc or desc (default : desc)
	CursorValue     float64 `protobuf:"fixed64,302,opt,name=cursor_value,json=cursorValue,proto3" json:"cursor_value,omitempty"`           // cursor value (default : 0)
}

func (x *PagingOption) Reset() {
	*x = PagingOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pagination_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingOption) ProtoMessage() {}

func (x *PagingOption) ProtoReflect() protoreflect.Message {
	mi := &file_pagination_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingOption.ProtoReflect.Descriptor instead.
func (*PagingOption) Descriptor() ([]byte, []int) {
	return file_pagination_proto_rawDescGZIP(), []int{0}
}

func (x *PagingOption) GetPagingMode() int64 {
	if x != nil {
		return x.PagingMode
	}
	return 0
}

func (x *PagingOption) GetCurrentPageNumber() int64 {
	if x != nil {
		return x.CurrentPageNumber
	}
	return 0
}

func (x *PagingOption) GetGotoPageNumber() int64 {
	if x != nil {
		return x.GotoPageNumber
	}
	return 0
}

func (x *PagingOption) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PagingOption) GetOrderBy() []*PagingOrder {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *PagingOption) GetCursorColumn() string {
	if x != nil {
		return x.CursorColumn
	}
	return ""
}

func (x *PagingOption) GetCursorDirection() string {
	if x != nil {
		return x.CursorDirection
	}
	return ""
}

func (x *PagingOption) GetCursorValue() float64 {
	if x != nil {
		return x.CursorValue
	}
	return 0
}

// paging_order : paging order (example : order by id desc)
type PagingOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column    string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`       // order column (default : id)
	Direction string `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"` // order direction (default : desc)
}

func (x *PagingOrder) Reset() {
	*x = PagingOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pagination_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingOrder) ProtoMessage() {}

func (x *PagingOrder) ProtoReflect() protoreflect.Message {
	mi := &file_pagination_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingOrder.ProtoReflect.Descriptor instead.
func (*PagingOrder) Descriptor() ([]byte, []int) {
	return file_pagination_proto_rawDescGZIP(), []int{1}
}

func (x *PagingOrder) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *PagingOrder) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

// paging_result : paging result
type PagingResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// paging mode : page number mode and cursor mode
	PagingMode int64 `protobuf:"varint,1,opt,name=paging_mode,json=pagingMode,proto3" json:"paging_mode,omitempty"` // paging mode
	// page info
	TotalSize   int64 `protobuf:"varint,100,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`       // total records number
	PageSize    int64 `protobuf:"varint,101,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`          // the number of items to be shown per page
	CurrentPage int64 `protobuf:"varint,102,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"` // current page number
	ShowFrom    int64 `protobuf:"varint,103,opt,name=show_from,json=showFrom,proto3" json:"show_from,omitempty"`          // current page show from - to records
	ShowTo      int64 `protobuf:"varint,104,opt,name=show_to,json=showTo,proto3" json:"show_to,omitempty"`                // current page show from - to records
	LastPage    int64 `protobuf:"varint,105,opt,name=last_page,json=lastPage,proto3" json:"last_page,omitempty"`          // last page
	// order by
	OrderBy []*PagingOrder `protobuf:"bytes,200,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"` // order by
	// cursor mode
	CursorColumn    string  `protobuf:"bytes,300,opt,name=cursor_column,json=cursorColumn,proto3" json:"cursor_column,omitempty"`          // cursor column
	CursorDirection string  `protobuf:"bytes,301,opt,name=cursor_direction,json=cursorDirection,proto3" json:"cursor_direction,omitempty"` // cursor direction
	CursorValue     float64 `protobuf:"fixed64,302,opt,name=cursor_value,json=cursorValue,proto3" json:"cursor_value,omitempty"`           // cursor value
	// paging option
	Option *PagingOption `protobuf:"bytes,400,opt,name=option,proto3" json:"option,omitempty"` // option
}

func (x *PagingResult) Reset() {
	*x = PagingResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pagination_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingResult) ProtoMessage() {}

func (x *PagingResult) ProtoReflect() protoreflect.Message {
	mi := &file_pagination_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingResult.ProtoReflect.Descriptor instead.
func (*PagingResult) Descriptor() ([]byte, []int) {
	return file_pagination_proto_rawDescGZIP(), []int{2}
}

func (x *PagingResult) GetPagingMode() int64 {
	if x != nil {
		return x.PagingMode
	}
	return 0
}

func (x *PagingResult) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *PagingResult) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PagingResult) GetCurrentPage() int64 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *PagingResult) GetShowFrom() int64 {
	if x != nil {
		return x.ShowFrom
	}
	return 0
}

func (x *PagingResult) GetShowTo() int64 {
	if x != nil {
		return x.ShowTo
	}
	return 0
}

func (x *PagingResult) GetLastPage() int64 {
	if x != nil {
		return x.LastPage
	}
	return 0
}

func (x *PagingResult) GetOrderBy() []*PagingOrder {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *PagingResult) GetCursorColumn() string {
	if x != nil {
		return x.CursorColumn
	}
	return ""
}

func (x *PagingResult) GetCursorDirection() string {
	if x != nil {
		return x.CursorDirection
	}
	return ""
}

func (x *PagingResult) GetCursorValue() float64 {
	if x != nil {
		return x.CursorValue
	}
	return 0
}

func (x *PagingResult) GetOption() *PagingOption {
	if x != nil {
		return x.Option
	}
	return nil
}

var File_pagination_proto protoreflect.FileDescriptor

var file_pagination_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd3,
	0x02, 0x0a, 0x0d, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x6f, 0x74, 0x6f, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x6f, 0x74,
	0x6f, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x62, 0x79, 0x18, 0xc8, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18,
	0xac, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xad, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0xae, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc2, 0x03, 0x0a, 0x0d, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x73, 0x68, 0x6f, 0x77, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x74, 0x6f, 0x18, 0x68, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x77,
	0x54, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x69, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x34, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0xc8, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0xad, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0xae, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6b,
	0x61, 0x69, 0x67, 0x75, 0x61, 0x6e, 0x67, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pagination_proto_rawDescOnce sync.Once
	file_pagination_proto_rawDescData = file_pagination_proto_rawDesc
)

func file_pagination_proto_rawDescGZIP() []byte {
	file_pagination_proto_rawDescOnce.Do(func() {
		file_pagination_proto_rawDescData = protoimpl.X.CompressGZIP(file_pagination_proto_rawDescData)
	})
	return file_pagination_proto_rawDescData
}

var file_pagination_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pagination_proto_goTypes = []interface{}{
	(*PagingOption)(nil), // 0: pagination.paging_option
	(*PagingOrder)(nil),  // 1: pagination.paging_order
	(*PagingResult)(nil), // 2: pagination.paging_result
}
var file_pagination_proto_depIdxs = []int32{
	1, // 0: pagination.paging_option.order_by:type_name -> pagination.paging_order
	1, // 1: pagination.paging_result.order_by:type_name -> pagination.paging_order
	0, // 2: pagination.paging_result.option:type_name -> pagination.paging_option
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pagination_proto_init() }
func file_pagination_proto_init() {
	if File_pagination_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pagination_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pagination_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pagination_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pagination_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pagination_proto_goTypes,
		DependencyIndexes: file_pagination_proto_depIdxs,
		MessageInfos:      file_pagination_proto_msgTypes,
	}.Build()
	File_pagination_proto = out.File
	file_pagination_proto_rawDesc = nil
	file_pagination_proto_goTypes = nil
	file_pagination_proto_depIdxs = nil
}
